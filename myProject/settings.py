"""
Django settings for myProject project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/


# anonymous user can't make/edit kitchen
# s3 bucket to store images
# email sent by AWS lambda function if possible
# allow view of all kitchens of a user
# allow kitchen menu to be editable when user is kitchen provider
# make each kitchen menu easier to edit


# projectfeastfreedom@gmail.com
# 3Y3un3xb
"""

import os
import json
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Loading config file
with open(os.path.join(BASE_DIR,'conf.json')) as conf_file:
    SECRETS = json.load(conf_file)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = SECRETS["SECRET_KEY"]

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['18.217.49.234']


# Application definition

INSTALLED_APPS = [
    'django.contrib.sessions',
    'cart',
    'myApp',
    'orders',
    'payment',
    'paypal.standard.ipn',
    'userModule',
    'serviceProviderApp',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'storages',
]

# Custom User Model
AUTH_USER_MODEL = 'userModule.User'
#AUTH_USER_MODEL = 'core.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #'userModule.get_username.RequestMiddleware',
]

ROOT_URLCONF = 'myProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'myApp/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#    }
#}
DATABASES = {
    'default': {
        'ENGINE': SECRETS["DATABASES"]["ENGINE"],
        'NAME': SECRETS["DATABASES"]["NAME"],
        'USER': SECRETS["DATABASES"]["USER"],
        'PASSWORD': SECRETS["DATABASES"]["PASSWORD"],
        'HOST': SECRETS["DATABASES"]["HOST"],
        'PORT': SECRETS["DATABASES"]["PORT"],
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

#STATIC_URL = '/static/'
#STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
STATIC_ROOT='/opt/bitnami/apps/django/django_projects/Project/static'

MEDIA_URL = '/media/'
#MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
MEDIA_ROOT='/opt/bitnami/apps/django/django_projects/Project/media'

CART_SESSION_ID = 'cart'

# Login and Logout Redirect
LOGIN_REDIRECT_URL = 'myApp:index'
LOGOUT_REDIRECT_URL = 'myApp:index'

# redis settings
REDIS_HOST = 'localhost'
REDIS_PORT = 6379
REDIS_DB = 1

# Emailing Settings
EMAIL_HOST='smtp.gmail.com'
EMAIL_PORT=465
EMAIL_USE_SSL=True

# django-paypal settings
PAYPAL_RECEIVER_EMAIL = 'danielrgrisham@gmail.com'
PAYPAL_TEST = True

AWS_ACCESS_KEY_ID='AKIAJPZJOHZRA6WN5ARA'
AWS_SECRET_ACCESS_KEY='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'
AWS_STORAGE_BUCKET_NAME='feastfreedomstatic'
AWS_S3_CUSTOM_DOMAIN='%s.s3.amazonaws.com'%AWS_STORAGE_BUCKET_NAME
AWS_S3_OBJECT_PARAMETERS={
	'CacheControl':'max-age=86400',
}
AWS_LOCATION='static'

STATICFILES_DIRS=[
	#os.path.join(BASE_DIR,'Project/static'),
	'/opt/bitnami/apps/django/django_projects/Project/static'
]
STATIC_URL='https://%s/%s/'%(AWS_S3_CUSTOM_DOMAIN,AWS_LOCATION)
STATICFILES_STORAGE='storages.backends.s3boto3.S3Boto3Storage'





